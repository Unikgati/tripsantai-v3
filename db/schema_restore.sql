-- schema_restore.sql
-- Restores the minimal schema expected by the web app.
-- Run this in Supabase SQL editor or via psql connected to your project.

create table if not exists public.destinations (
  id bigint primary key,
  title text not null,
  slug text,
  imageUrl text,
  galleryImages jsonb,
  longDescription text,
  priceTiers jsonb,
  duration int,
  minPeople int,
  itinerary jsonb,
  facilities text[],
  categories text[],
  mapCoordinates jsonb,
  created_at timestamptz default now()
);

create table if not exists public.blog_posts (
  id bigint primary key,
  title text not null,
  slug text,
  imageUrl text,
  category text,
  author text,
  date text,
  content text,
  created_at timestamptz default now()
);

create table if not exists public.orders (
  id bigint primary key,
  customer_name text,
  customer_phone text,
  destination_id bigint,
  destination_title text,
  order_date timestamptz default now(),
  departure_date date,
  participants int,
  total_price numeric,
  status text,
  payment_status text,
  payment_history jsonb,
  notes text
);

create table if not exists public.app_settings (
  id bigint primary key,
  brandname text,
  tagline text,
  theme text,
  accentcolor text,
  logolighturl text,
  logodarkurl text,
  favicon16url text,
  favicon192url text,
  favicon512url text,
  email text,
  address text,
  whatsappnumber text,
  facebookurl text,
  instagramurl text,
  twitterurl text,
  bankname text,
  bankaccountnumber text,
  bankaccountholder text,
  heroslides jsonb,
  updated_at timestamptz default now()
);

create table if not exists public.invoices (
  id bigint generated by default as identity primary key,
  order_id bigint not null,
  total numeric not null,
  metadata jsonb,
  share_token text,
  created_at timestamptz default now()
);

create unique index if not exists idx_invoices_order_id_unique on public.invoices(order_id);
create unique index if not exists idx_invoices_share_token_unique on public.invoices(share_token);

-- Optionally create an admin users table (if you want to manage admin list separately)
create table if not exists public.admins (
  id uuid primary key default gen_random_uuid(),
  auth_uid uuid, -- link to supabase auth users
  email text,
  role text default 'admin',
  created_at timestamptz default now()
);

-- Example: insert a default app_settings row with id=1
insert into public.app_settings (id, brandname, tagline, theme, accentcolor, email) values (1, 'TravelGo', 'Jelajahi dunia tanpa batas.', 'light', '#3182ce', 'contact@travelgo.com') on conflict (id) do nothing;
